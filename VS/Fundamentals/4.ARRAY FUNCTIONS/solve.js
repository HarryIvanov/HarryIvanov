function solve () {

    let arr =[1, 2, 3, 4, 5];
    console.log(arr);
    console.table (arr);
    console.log(arr[0]);
    console.log(arr.length);

    arr[6] = arr[0] + arr[1] // на 6ти индекс добавяме сбор. Можем да добавим и цяло число. Те остават на номера индекс, който сме задали
    console.log(arr.length); // Показва ни, че на 5ти индекс остава дупка.
    console.table(arr); 
    console.log(arr[6]);
    console.log(arr[arr.length -1]); // показва винаги последния елемент от масива!

    arr.push(10); // добавя елемент на последната възможна позиция на индексите.
   // .length // дължина 
   // .push // внедравяне на елемент на последно място в масив. Ако го парснем към променлива, ще ни върне новата дължина на масива.
   // .includes // Проверява дали определено число се съдържа в масива true/false
   // .toString // преобразува в стринг целия масив (или каквото и да е)
   // .join // съединява всички елементи в масива с някой от сепараторите (-, +, :, ; и т.н.).Ако не сложим нищо в скобите съединява с , и го върти в стринг
   // for (let el of arr) - присвоява първия елемент от масива и започва да върти цикъл по него. 
   // .pop - маха последния елемент от масива. Можем да го парснем към променлива.
   // .unshift - слага елемент на първия индекс. 
   // .shift - премахва елемент от първия индекс на масива. Можем да го парснем към променлива.
   // .split - разделя масива, спрямо сепаратора, който сме му задали.
   // \n - отпечатва на нов ред.
   // .indexOf - връща индекса на зададен параметър. Ако параметъра го няма в масива, връща -1!
   // .slice(2, 4) - реже от втори индекс, до четвърти индекс. Запазва ги в променлива. Ако не зададем втори индекс ще изреже всичко от 2ри индекс.
            //ако му зададем (-4) ще хване последните 4 елемента от масива. Не може да променя масива.
   // .splice(2, 3) - реже от масива. Стартов индекс + брой елементи, които да изтрие. Ако зададем още елементи след втората запетая, той ще ги добави в масива.         
   // .reverse - обръща масива. Работи само при масив!




}
solve ()